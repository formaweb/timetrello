{
  "name": "TimeTrello",
  "tagline": "TimeTrello is a simple gem that can interpret special Trello comments. Those comments are then converted to a record type that makes it easy to integrate a time tracking application with Trello.",
  "body": "## Installation\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'timetrello'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```console\r\nbundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```console\r\ngem install timetrello\r\n```\r\n\r\n\r\n## Usage\r\n\r\nYou use the module directly.\r\n\r\n### Trello\r\n\r\nAll time tracking annotations must follow the specification below in order to be\r\nunderstood and consolidated by **TimeTrello**.\r\n\r\n**PREFIX** **DURATION** [**START_DATE**] \"**COMMENT**\"\r\n\r\nSee some valid examples:\r\n\r\n- :clock12: 0:35\r\n- :clock12: 102:22 \"A comment example.\"\r\n- :clock12: 00:05 [2016-04-01]\r\n- :clock12: 007:59 [2012-03-17 21:50Z] \"Other comment example.\"\r\n\r\nThe default prefix which identifies the proper comment is :clock12:\r\n(`:clock12:`) emoticon. If no start date is provided through the comment, the\r\ncomment timestamp is used.\r\n\r\n### Ruby\r\n\r\n```ruby\r\nrequire 'time_trello'\r\n\r\nTimeTrello.initialize('your trello public key here', 'your trello token here', ':clock12:')\r\ntasks = TimeTrello.find_all(Time.new(2012, 1, 1), Time.new(2016, 4, 1), 'Board ID you want to evaluate')\r\n\r\ntasks.each do |task|\r\n  # ...\r\nend\r\n```\r\n\r\n## Methods\r\n\r\n### `initialize`\r\n\r\nInitializes the **TimeTrello** subsystem, providing information necessary for its\r\nproper workings.\r\n\r\n#### Parameters\r\n\r\n```ruby\r\nTimeTrello.initialize(public_key, token, prefix=':clock12:')\r\n```\r\n\r\n| Parameter | Type | Description |\r\n|---|:---:|---|\r\n| **`public_key`** | `String` | Your Trello developer key |\r\n| **`token`** | `String` | The connection token provided by Trello due to its authorization process |\r\n| **`prefix`** | `String` | Prefix to use for comment detection. Defaults to `:clock12:` |\r\n\r\n### `find_all`\r\n\r\nQueries Trello, parsing comments which have the required format for consolidation.\r\n\r\n#### Parameters\r\n\r\n```ruby\r\nTimeTrello.find_all (start_date, end_date, board_id, &filter)\r\n```\r\n\r\n| Parameter | Type | Description |\r\n|---|:---:|---|\r\n| **`start_date`** | `Time` | Start date to use for limiting the result set |\r\n| **`end_date`** | `Time` | End date to use for limiting the result set |\r\n| **`board_id`** | `String` | Trello's board identification to query for |\r\n| **`filter`** | `Proc` | Block to use for extra data filtering |\r\n\r\nThe `filter` block receives as parameter an instance of\r\n`TimeTrello::ActivityRecord`. It must return a boolean:\r\n\r\n- `true`: the entry will be on the final result set\r\n- `false`: the entry will de discarded from final result set\r\n\r\nSee the `example.rb` file for a usage example.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}